# Application Configuration
spring.application.name=gateway
server.port=8080

# Netty Configuration
server.netty.connection-timeout=5000ms
server.compression.enabled=true
server.compression.min-response-size=1024

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=2000ms
spring.data.redis.password=redispasswd123

# Lettuce Connection Pool Configuration
spring.data.redis.lettuce.pool.max-active=20
spring.data.redis.lettuce.pool.max-idle=10
spring.data.redis.lettuce.pool.min-idle=5
spring.data.redis.lettuce.pool.time-between-eviction-runs=60000ms
spring.data.redis.lettuce.shutdown-timeout=100ms

# Gateway HttpClient Configuration
spring.cloud.gateway.server.webflux.httpclient.connect-timeout=5000
spring.cloud.gateway.server.webflux.httpclient.response-timeout=30000

# JWT Secret (change in production!)
jwt.secret=abcdefghijklmnopqrstuvxyz123456

# eureka server config
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Actuator Configuration
management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.tags.application=gateway

# Tracing Configuration
management.tracing.sampling.probability=1.0

# Zipkin Configuration
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.zipkin.tracing.export.enabled=true

# Logging Configuration
logging.level.root=WARN
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.security=DEBUG
logging.file.path=D:/chatwolf2/logs/gateway
logging.file.name=D:/chatwolf2/logs/gateway/application.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } --- [%15.15t] %-40.40logger{39} : %m%n%wEx
logging.logback.rollingpolicy.max-file-size=5MB
logging.logback.rollingpolicy.max-history=60
logging.logback.rollingpolicy.total-size-cap=50MB

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.slidingWindowSize=100
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.waitDurationInOpenState=60s
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.slowCallRateThreshold=50
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.slowCallDurationThreshold=2s
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.recordExceptions=java.io.IOException,java.net.ConnectException

resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.slidingWindowSize=100
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.waitDurationInOpenState=60s
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.failureRateThreshold=50

resilience4j.circuitbreaker.instances.messageServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.messageServiceCircuitBreaker.slidingWindowSize=100
resilience4j.circuitbreaker.instances.messageServiceCircuitBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.messageServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.messageServiceCircuitBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.messageServiceCircuitBreaker.waitDurationInOpenState=60s
resilience4j.circuitbreaker.instances.messageServiceCircuitBreaker.failureRateThreshold=50
